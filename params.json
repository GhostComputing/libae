{"name":"libae","tagline":"Async event loop extract from Redis.","body":"# libae\r\n\r\nRedis's async event library, you can use it in your projects.\r\n\r\n## supported event multiplexing model\r\n\r\n* `epoll`\r\n* `kqueue`\r\n* `ev_port`\r\n* `select`\r\n\r\n## Example\r\n\r\n### Timer\r\n\r\nPrint `Hello, World` on screen every 10 seconds:\r\n\r\n```C\r\nint print(struct aeEventLoop *loop, long long id, void *clientData)\r\n{\r\n    printf(\"%lld - Hello, World\\n\", id);\r\n    return -1;\r\n}\r\n\r\nint main(void)\r\n{\r\n    aeEventLoop *loop = aeCreateEventLoop(0);\r\n    int i;\r\n    for (i = 0; i < 10; i ++) {\r\n        aeCreateTimeEvent(loop, i*1000, print, NULL, NULL);\r\n    }\r\n    aeMain(loop);\r\n    aeDeleteEventLoop(loop);\r\n    return 0;\r\n}\r\n```\r\n\r\n### Echo server\r\n\r\nStart an echo server on 8000:\r\n\r\n```C\r\nvoid readFromClient(aeEventLoop *loop, int fd, void *privdata, int mask)\r\n{\r\n    int buffer_size = 1024;\r\n    char buffer[1024];\r\n    int size;\r\n    size = read(fd, buffer, buffer_size);\r\n    write(fd, buffer, size);\r\n}\r\n\r\nvoid acceptTcpHandler(aeEventLoop *loop, int fd, void *privdata, int mask)\r\n{\r\n    int client_port, client_fd;\r\n    char client_ip[128];\r\n    // create client socket\r\n    client_fd = anetTcpAccept(NULL, fd, client_ip, 128, &client_port);\r\n    printf(\"Accepted %s:%d\\n\", client_ip, client_port);\r\n\r\n    // set client socket non-block\r\n    anetNonBlock(NULL, client_fd);\r\n\r\n    // regist on message callback\r\n    int ret;\r\n    ret = aeCreateFileEvent(loop, client_fd, AE_READABLE, readFromClient, NULL);\r\n    assert(ret != AE_ERR);\r\n}\r\n\r\nint main()\r\n{\r\n    int ipfd;\r\n    // create server socket\r\n    ipfd = anetTcpServer(NULL, 8000, \"0.0.0.0\", 0);\r\n    assert(ipfd != ANET_ERR);\r\n\r\n    // create main event loop\r\n    aeEventLoop *loop;\r\n    loop = aeCreateEventLoop(10);\r\n\r\n    // regist socket connect callback\r\n    int ret;\r\n    ret = aeCreateFileEvent(loop, ipfd, AE_READABLE, acceptTcpHandler, NULL);\r\n    assert(ret != AE_ERR);\r\n\r\n    // start main loop\r\n    aeMain(loop);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n[original document](http://redis.io/topics/internals-rediseventlib)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}